name: JMeter Test Suite

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  jmeter-test:
    runs-on: ubuntu-latest

    steps:
    # --- SETUP ---
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    # --- JMETER INSTALLATION ---
    - name: Cache JMeter
      id: cache-jmeter
      uses: actions/cache@v3
      with:
        path: apache-jmeter-5.6.2
        key: ${{ runner.os }}-jmeter-5.6.2

    - name: Install JMeter
      if: steps.cache-jmeter.outputs.cache-hit != 'true'
      run: |
        wget -q https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.6.2.tgz
        tar -xzf apache-jmeter-5.6.2.tgz
        echo "JMETER_HOME=$PWD/apache-jmeter-5.6.2" >> $GITHUB_ENV
        echo "PATH=$PWD/apache-jmeter-5.6.2/bin:$PATH" >> $GITHUB_ENV

    # --- VERIFICATION ---
    - name: Verify installation
      run: |
        echo "JMeter path: $JMETER_HOME/bin/jmeter"
        $JMETER_HOME/bin/jmeter --version

    # --- TEST EXECUTION ---
    - name: Run JMeter test
      run: |
        mkdir -p ./jmeter-results
        $JMETER_HOME/bin/jmeter -n -t ./jmeter/test.jmx \
          -l ./jmeter-results/results.jtl \
          -e -o ./jmeter-results/html-report

        # Verify results were generated
        if [ ! -s "./jmeter-results/results.jtl" ]; then
          echo "::error::Test failed - no results generated"
          exit 1
        fi

    # --- ARTIFACT PREPARATION ---
    - name: Prepare reports
      run: |
        if [ -d "jmeter-results/html-report" ]; then
          cd jmeter-results
          zip -r report.zip html-report/
        fi

    # --- ARTIFACT UPLOAD ---
    - name: Upload results
      uses: actions/upload-artifact@v4
      with:
        name: jmeter-results
        path: |
          jmeter-results/results.jtl
          jmeter-results/report.zip
        if-no-files-found: warn
