name: JMeter Test Suite

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  jmeter-test:
    runs-on: ubuntu-latest

    steps:
    # --- SETUP ---
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    # --- JMETER INSTALLATION ---
    - name: Install JMeter with plugins
      run: |
        JMETER_VERSION="5.6.2"
        JMETER_DIR="apache-jmeter-${JMETER_VERSION}"
        
        # Clean install
        rm -rf ${JMETER_DIR} apache-jmeter-*.tgz
        
        # Download and extract
        wget -q https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-${JMETER_VERSION}.tgz
        tar -xzf apache-jmeter-${JMETER_VERSION}.tgz
        
        # Download cmdrunner separately (as it's often missing)
        wget -q https://repo1.maven.org/maven2/kg/apc/cmdrunner/2.2/cmdrunner-2.2.jar \
          -O ${JMETER_DIR}/lib/cmdrunner-2.2.jar
        
        # Install plugins manager
        wget -q https://repo1.maven.org/maven2/kg/apc/jmeter-plugins-manager/1.7/jmeter-plugins-manager-1.7.jar \
          -O ${JMETER_DIR}/lib/ext/jmeter-plugins-manager-1.7.jar
        
        # Set paths
        echo "JMETER_HOME=${GITHUB_WORKSPACE}/${JMETER_DIR}" >> $GITHUB_ENV
        echo "PATH=${GITHUB_WORKSPACE}/${JMETER_DIR}/bin:$PATH" >> $GITHUB_ENV

    # --- CONFIGURE JMETER ---
    - name: Configure JMeter
      run: |
        # Disable plugin scanning warnings
        echo "jmeterplugin.skip_package_scan=true" >> $JMETER_HOME/bin/jmeter.properties
        
        # Install required plugins
        java -jar $JMETER_HOME/lib/jmeter-plugins-manager-1.7.jar \
          install jpgc-cmd=2.2,jpgc-synthesis=2.2
        
        # Create output directories
        mkdir -p ./jmeter-results/{html,csv,json}

    # --- TEST EXECUTION ---
    - name: Run JMeter tests
      run: |
        # First run to generate JTL (without HTML report)
        $JMETER_HOME/bin/jmeter -n -t ./jmeter/test.jmx -l ./jmeter-results/results.jtl
        
        # Verify test executed successfully
        if [ ! -s "./jmeter-results/results.jtl" ]; then
          echo "::error::Test failed - no results generated"
          exit 1
        fi
        
        # Generate HTML report separately
        $JMETER_HOME/bin/jmeter -g ./jmeter-results/results.jtl -o ./jmeter-results/html

    # --- GENERATE ADDITIONAL REPORTS ---
    - name: Generate CSV and JSON reports
      run: |
        # CSV report
        java -jar $JMETER_HOME/lib/cmdrunner-2.2.jar \
          --tool Reporter \
          --input-jtl ./jmeter-results/results.jtl \
          --plugin-type AggregateReport \
          --generate-csv ./jmeter-results/csv/aggregate.csv
        
        # JSON report
        java -jar $JMETER_HOME/lib/cmdrunner-2.2.jar \
          --tool Reporter \
          --input-jtl ./jmeter-results/results.jtl \
          --plugin-type AggregateReport \
          --generate-json ./jmeter-results/json/aggregate.json

    # --- UPLOAD ARTIFACTS ---
    - name: Upload reports
      uses: actions/upload-artifact@v4
      with:
        name: jmeter-reports-${{ github.run_number }}
        path: |
          jmeter-results/results.jtl
          jmeter-results/html/**
          jmeter-results/csv/**
          jmeter-results/json/**
        if-no-files-found: error
